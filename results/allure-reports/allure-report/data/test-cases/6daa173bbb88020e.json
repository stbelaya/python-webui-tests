{"uid":"6daa173bbb88020e","name":"test_edit_some_contact[None: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None]","fullName":"test.test_edit_contact#test_edit_some_contact","historyId":"5b2f62094915db38033485d978ec972e","time":{"start":1681577870908,"stop":1681577877862,"duration":6954},"status":"failed","statusMessage":"AssertionError: assert [496:  ;  ;  ...ne; None, ...] == [496:  ;  ;  ...ne; None, ...]\n  At index 20 diff: 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None != 523: First test1; Last test1; ; None; None\n  Full diff:\n    [\n     496:  ;  ;  ; None; None,\n     498: firstname2u; lastname2u; address 2u; None; None,\n     501: firstname2u; lastname2u; address 2u; None; None,\n     502: firstname2u; lastname2u; address 2u; None; None,\n     503: nameUPD1; lastUPD1; address UPD1; None; None,\n     505: firstname2u; lastname2u; address 2u; None; None,\n     507:  ;  ;  ; None; None,\n     508: ; ; ; None; None,\n     509: ; ; ; None; None,\n     510: ; ; ; None; None,\n     512: Alexandrina; Bololo; Moscow city; None; None,\n     514:  ;  ;  ; None; None,\n     515:  ;  ;  ; None; None,\n     516:  ;  ;  ; None; None,\n     517: ; ; ; None; None,\n     518: ; ; ; None; None,\n     519:  ;  ;  ; None; None,\n     520: First test1; Last test1; ; None; None,\n     521: ; ; ; None; None,\n     522:  ;  ;  ; None; None,\n  -  523: First test1; Last test1; ; None; None,\n  +  523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None,\n    ]","statusTrace":"app = <fixture.application.Application object at 0x0000027EC1C26370>\njson_contacts = 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None\ndb = <fixture.orm.ORMFixture object at 0x0000027EC1B0BD00>, check_ui = False\n\n    def test_edit_some_contact(app, json_contacts, db, check_ui):\n        with allure.step(\"Given a non-empty contact list\"):\n            if not db.get_contact_list():\n                app.contact.create(Contact(firstname=\"test\"))\n            old_contacts = db.get_contact_list()\n        with allure.step(\"Given a random contact from the list\"):\n            contact = random.choice(old_contacts)\n        new_contact = json_contacts\n        new_contact.id = contact.id\n        with allure.step(f\"When I edit the contact {contact} from the list according to given contact {new_contact}\"):\n            app.contact.edit_contact_by_id(contact.id, new_contact)\n        with allure.step(\"Then the new contact list is equal to the old list with the edited contact\"):\n            new_contacts = db.get_contact_list()\n            old_contacts.remove(contact)\n            old_contacts.append(propagate(contact, new_contact))\n>           assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\nE           assert [496:  ;  ;  ...ne; None, ...] == [496:  ;  ;  ...ne; None, ...]\nE             At index 20 diff: 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None != 523: First test1; Last test1; ; None; None\nE             Full diff:\nE               [\nE                496:  ;  ;  ; None; None,\nE                498: firstname2u; lastname2u; address 2u; None; None,\nE                501: firstname2u; lastname2u; address 2u; None; None,\nE                502: firstname2u; lastname2u; address 2u; None; None,\nE                503: nameUPD1; lastUPD1; address UPD1; None; None,\nE                505: firstname2u; lastname2u; address 2u; None; None,\nE                507:  ;  ;  ; None; None,\nE                508: ; ; ; None; None,\nE                509: ; ; ; None; None,\nE                510: ; ; ; None; None,\nE                512: Alexandrina; Bololo; Moscow city; None; None,\nE                514:  ;  ;  ; None; None,\nE                515:  ;  ;  ; None; None,\nE                516:  ;  ;  ; None; None,\nE                517: ; ; ; None; None,\nE                518: ; ; ; None; None,\nE                519:  ;  ;  ; None; None,\nE                520: First test1; Last test1; ; None; None,\nE                521: ; ; ; None; None,\nE                522:  ;  ;  ; None; None,\nE             -  523: First test1; Last test1; ; None; None,\nE             +  523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None,\nE               ]\n\ntest\\test_edit_contact.py:24: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"stop","time":{"start":1681577760872,"stop":1681577760872,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"db","time":{"start":1681577760872,"stop":1681577760894,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"app","time":{"start":1681577870767,"stop":1681577870907,"duration":140},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"check_ui","time":{"start":1681577870907,"stop":1681577870907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert [496:  ;  ;  ...ne; None, ...] == [496:  ;  ;  ...ne; None, ...]\n  At index 20 diff: 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None != 523: First test1; Last test1; ; None; None\n  Full diff:\n    [\n     496:  ;  ;  ; None; None,\n     498: firstname2u; lastname2u; address 2u; None; None,\n     501: firstname2u; lastname2u; address 2u; None; None,\n     502: firstname2u; lastname2u; address 2u; None; None,\n     503: nameUPD1; lastUPD1; address UPD1; None; None,\n     505: firstname2u; lastname2u; address 2u; None; None,\n     507:  ;  ;  ; None; None,\n     508: ; ; ; None; None,\n     509: ; ; ; None; None,\n     510: ; ; ; None; None,\n     512: Alexandrina; Bololo; Moscow city; None; None,\n     514:  ;  ;  ; None; None,\n     515:  ;  ;  ; None; None,\n     516:  ;  ;  ; None; None,\n     517: ; ; ; None; None,\n     518: ; ; ; None; None,\n     519:  ;  ;  ; None; None,\n     520: First test1; Last test1; ; None; None,\n     521: ; ; ; None; None,\n     522:  ;  ;  ; None; None,\n  -  523: First test1; Last test1; ; None; None,\n  +  523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None,\n    ]","statusTrace":"app = <fixture.application.Application object at 0x0000027EC1C26370>\njson_contacts = 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None\ndb = <fixture.orm.ORMFixture object at 0x0000027EC1B0BD00>, check_ui = False\n\n    def test_edit_some_contact(app, json_contacts, db, check_ui):\n        with allure.step(\"Given a non-empty contact list\"):\n            if not db.get_contact_list():\n                app.contact.create(Contact(firstname=\"test\"))\n            old_contacts = db.get_contact_list()\n        with allure.step(\"Given a random contact from the list\"):\n            contact = random.choice(old_contacts)\n        new_contact = json_contacts\n        new_contact.id = contact.id\n        with allure.step(f\"When I edit the contact {contact} from the list according to given contact {new_contact}\"):\n            app.contact.edit_contact_by_id(contact.id, new_contact)\n        with allure.step(\"Then the new contact list is equal to the old list with the edited contact\"):\n            new_contacts = db.get_contact_list()\n            old_contacts.remove(contact)\n            old_contacts.append(propagate(contact, new_contact))\n>           assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\nE           assert [496:  ;  ;  ...ne; None, ...] == [496:  ;  ;  ...ne; None, ...]\nE             At index 20 diff: 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None != 523: First test1; Last test1; ; None; None\nE             Full diff:\nE               [\nE                496:  ;  ;  ; None; None,\nE                498: firstname2u; lastname2u; address 2u; None; None,\nE                501: firstname2u; lastname2u; address 2u; None; None,\nE                502: firstname2u; lastname2u; address 2u; None; None,\nE                503: nameUPD1; lastUPD1; address UPD1; None; None,\nE                505: firstname2u; lastname2u; address 2u; None; None,\nE                507:  ;  ;  ; None; None,\nE                508: ; ; ; None; None,\nE                509: ; ; ; None; None,\nE                510: ; ; ; None; None,\nE                512: Alexandrina; Bololo; Moscow city; None; None,\nE                514:  ;  ;  ; None; None,\nE                515:  ;  ;  ; None; None,\nE                516:  ;  ;  ; None; None,\nE                517: ; ; ; None; None,\nE                518: ; ; ; None; None,\nE                519:  ;  ;  ; None; None,\nE                520: First test1; Last test1; ; None; None,\nE                521: ; ; ; None; None,\nE                522:  ;  ;  ; None; None,\nE             -  523: First test1; Last test1; ; None; None,\nE             +  523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None,\nE               ]\n\ntest\\test_edit_contact.py:24: AssertionError","steps":[{"name":"Given a non-empty contact list","time":{"start":1681577870908,"stop":1681577870913,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Given a random contact from the list","time":{"start":1681577870913,"stop":1681577870913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"When I edit the contact 523: First test1; Last test1; ; None; None from the list according to given contact 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None","time":{"start":1681577870913,"stop":1681577877857,"duration":6944},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Then the new contact list is equal to the old list with the edited contact","time":{"start":1681577877857,"stop":1681577877861,"duration":4},"status":"failed","statusMessage":"AssertionError: assert [496:  ;  ;  ...ne; None, ...] == [496:  ;  ;  ...ne; None, ...]\n  At index 20 diff: 523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None != 523: First test1; Last test1; ; None; None\n  Full diff:\n    [\n     496:  ;  ;  ; None; None,\n     498: firstname2u; lastname2u; address 2u; None; None,\n     501: firstname2u; lastname2u; address 2u; None; None,\n     502: firstname2u; lastname2u; address 2u; None; None,\n     503: nameUPD1; lastUPD1; address UPD1; None; None,\n     505: firstname2u; lastname2u; address 2u; None; None,\n     507:  ;  ;  ; None; None,\n     508: ; ; ; None; None,\n     509: ; ; ; None; None,\n     510: ; ; ; None; None,\n     512: Alexandrina; Bololo; Moscow city; None; None,\n     514:  ;  ;  ; None; None,\n     515:  ;  ;  ; None; None,\n     516:  ;  ;  ; None; None,\n     517: ; ; ; None; None,\n     518: ; ; ; None; None,\n     519:  ;  ;  ; None; None,\n     520: First test1; Last test1; ; None; None,\n     521: ; ; ; None; None,\n     522:  ;  ;  ; None; None,\n  -  523: First test1; Last test1; ; None; None,\n  +  523: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None,\n    ]\n","statusTrace":"  File \"C:\\Users\\stbelaya\\.jenkins\\workspace\\addressbook tests\\test\\test_edit_contact.py\", line 24, in test_edit_some_contact\n    assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":4,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[{"name":"stop::fin","time":{"start":1681577909126,"stop":1681577911699,"duration":2573},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_edit_contact"},{"name":"host","value":"DESKTOP-52F32IR"},{"name":"thread","value":"3868-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_edit_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"json_contacts","value":"None: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6daa173bbb88020e.json","parameterValues":["None: name; lastname<]4nN/PFA M7   Jj ; address]M } ix +S(VX bm$ *WDz\"; None; None"]}